### tidb-lightning configuartion
[lightning]

# background profile for debuging ( 0 to disable )
pprof-port = 10089

# number of workers to restore tables (default to `runtime.NumCPU()`).
# worker-pool-size =

# logging
level = "info"
file = "tidb-lightning.log"
max-size = 128 # MB
max-days = 28
max-backups = 14

[tikv-importer]
addr = "127.0.0.1:8808"
# size of batch to import kv data into TiKV: xxx (GB)
batch-size = 500 # GB

[mydumper]
# block size of file reading
read-block-size = 4096 # Byte (default = 4 KB)
# split source data file into multiple region/chunk to execute restoring in parallel
region-min-size = 268435456 # Byte (default = 256 MB)
# mydumper local source data directory
data-source-dir = "/tmp/export-20180328-200751"
# if no-schema is set true, lightning will get schema information from tidb-server directly without creating them.
no-schema=false

# configuration for tidb server address(one is enough) and pd server address(one is enough).
[tidb]
host = "127.0.0.1"
port = 4000
user = "root"
password = ""
# table schema information is fetched from tidb via this status-port.
status-port = 10080
pd-addr = "127.0.0.1:2379"
# lightning uses some code of tidb(used as library), and the flag controls it's log level.
log-level = "error"
# set tidb session variable to speed up checksum/analyze table.
distsql-scan-concurrency = 16

# post-restore provide some options which will be executed after all kv data has been imported into the tikv cluster.
# the execution order are(if set true): checksum -> compact -> analyze
[post-restore]
# if set true, checksum will do ADMIN CHECKSUM TABLE <table> for each table.
checksum = true
# if set true, compact will do compaction to tikv data.
compact = true
# if set true, analyze will do ANALYZE TABLE <table> for each table.
analyze = true
